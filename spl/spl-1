#!/usr/bin/env python3

from numpy import array, cos, concatenate as cat, nan

func = lambda x: cos(x*x)
x = array([0.0, 0.6, 0.9])
f = func(x)
dx = cat([[nan], x[1:] - x[:-1]])
df = cat([[nan], f[1:] - f[:-1]])

Sppx1 = 3 / (dx[1] + dx[2]) * (df[2] - df[1])
C1 = df[1] - Sppx1 * dx[1] / 6
C2 = df[2] + Sppx1 * dx[2] / 6
D1 = f[0] - C1 * x[0]
D2 = f[2] - C2 * x[2]

for i in 'Sppx1', 'C1', 'C2', 'D1', 'D2':
    print(f'{i} = {globals()[i]:.4e}')
